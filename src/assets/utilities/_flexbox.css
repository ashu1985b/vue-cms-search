.flex { display: flex$(important); }
.flex-row	{ flex-direction: row$(important); }
.flex-row-reverse { flex-direction: row-reverse$(important); }
.flex-col { flex-direction: column$(important); }
.flex-col-reverse { flex-direction: column-reverse$(important); }
.flex-wrap	{ flex-wrap: wrap$(important); }
.flex-wrap-reverse { flex-wrap: wrap-reverse$(important); }
.flex-no-wrap { flex-wrap: nowrap$(important); }

/* Align Items */
.items-start { align-items: flex-start$(important); }
.items-end	{ align-items: flex-end$(important); }
.items-center { align-items: center$(important); }
.items-baseline	{ align-items: baseline$(important); }
.items-stretch { align-items: stretch$(important); }

/* Align Content */
.content-center	{ align-content: center$(important); }
.content-start { align-content: flex-start$(important); }
.content-end { align-content: flex-end$(important); }
.content-between { align-content: space-between$(important); }
.content-around	{ align-content: space-around$(important); }

/* Align Self */
.self-auto	{ align-self: auto$(important); }
.self-start	{ align-self: flex-start$(important); }
.self-end { align-self: flex-end$(important); }
.self-center { align-self: center$(important); }
.self-stretch { align-self: stretch$(important); }

/* Justify Content */
.justify-start	{ justify-content: flex-start$(important); }
.justify-end	{ justify-content: flex-end$(important); }
.justify-center	{ justify-content: center$(important); }
.justify-between { justify-content: space-between$(important); }
.justify-around	{ justify-content: space-around$(important); }
.justify-evenly	{ justify-content: space-evenly$(important); }

/* Flex item property: flex */
.flex-1	{ flex: 1 1 0%$(important); }
.flex-auto { flex: 1 1 auto$(important); }
.flex-initial { flex: 0 1 auto$(important); }
.flex-none { flex: none$(important); }
.flex-grow-0 { flex-grow: 0$(important) }
.flex-grow { flex-grow: 1$(important) }
.flex-shrink-0	{ flex-shrink: 0$(important) }
.flex-shrink { flex-shrink: 1$(important) }

/* Flex item property: order */
@each $i in ( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ) {
    .order-$(i) { order: $i$(important) }
}
.order-first {order: -9999$(important) }
.order-last	{ order: 9999$(important) }
.order-none	{ order: 0$(important) }